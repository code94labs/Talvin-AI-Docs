{
  "openapi": "3.1.0",
  "info": {
    "title": "Talvin API",
    "description": "Talvin API provides endpoints for managing interviews, responses, and subscriptions to events.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.talvin.ai/api/v1"
    }
  ],
  "security": [
    {
      "talvinApiKey": [],
      "talvinOrgId": []
    }
  ],
  "paths": {
    "/subscribe": {
      "post": {
        "description": "Subscribe to events with a webhook URL",
        "requestBody": {
          "description": "Subscription details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Subscription created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/unsubscribe/{subscription_id}": {
      "delete": {
        "description": "Unsubscribe from events by subscription ID",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the subscription to delete"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Subscription successfully deleted"
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Subscription not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/whoami": {
      "get": {
        "description": "Returns information about the authenticated organization",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Organization information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhoAmIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/interviews": {
      "get": {
        "description": "Returns all interviews that the organization has created",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Interview response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Interview"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/interviews/{interview_id}": {
      "get": {
        "description": "Returns a specific interview by ID",
        "parameters": [
          {
            "name": "interview_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Unique identifier of the interview to retrieve"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Interview details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Interview"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Interview not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/responses": {
      "get": {
        "description": "Returns all responses that the organization has received.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Response data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EventType": {
        "type": "string",
        "enum": [
          "new_interview",
          "new_response",
          "candidate_status_changed"
        ],
        "description": "Type of event to subscribe to"
      },
      "SubscriptionRequest": {
        "type": "object",
        "required": [
          "hookUrl",
          "eventType"
        ],
        "properties": {
          "hookUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to receive webhook events"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventType"
          }
        }
      },
      "SubscriptionResponse": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the subscription"
          }
        }
      },
      "WhoAmIResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "data": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the organization"
              },
              "name": {
                "type": "string",
                "description": "Name of the organization"
              }
            }
          }
        }
      },
      "Interview": {
        "required": [
          "id",
          "name",
          "question_count",
          "time_duration",
          "questions",
          "description"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the interview",
            "type": "string"
          },
          "name": {
            "description": "Name of the interview",
            "type": "string"
          },
          "question_count": {
            "description": "Number of questions in the interview",
            "type": "integer"
          },
          "time_duration": {
            "description": "Time duration for the interview in minutes",
            "type": "string"
          },
          "questions": {
            "description": "List of questions in the interview",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            }
          },
          "description": {
            "description": "Description of the interview",
            "type": "string"
          }
        }
      },
      "Question": {
        "required": [
          "id",
          "question",
          "follow_up_count"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the question",
            "type": "string"
          },
          "question": {
            "description": "The question text",
            "type": "string"
          },
          "follow_up_count": {
            "description": "Number of follow-up questions",
            "type": "integer"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ResponseItem": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "name",
          "email",
          "call_id",
          "duration",
          "interview"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the response"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the response was created"
          },
          "name": {
            "type": "string",
            "description": "Name of the respondent"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the respondent"
          },
          "call_id": {
            "type": "string",
            "description": "Unique identifier for the call session"
          },
          "duration": {
            "type": "integer",
            "description": "Duration of the interview in minutes"
          },
          "interview": {
            "$ref": "#/components/schemas/ResponseInterview"
          }
        }
      },
      "ResponseInterview": {
        "type": "object",
        "required": [
          "id",
          "name",
          "organization_id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the interview"
          },
          "name": {
            "type": "string",
            "description": "Name of the interview"
          },
          "organization_id": {
            "type": "string",
            "description": "Identifier of the organization that owns the interview"
          }
        }
      }
    },
    "securitySchemes": {
      "talvinOrgId": {
        "type": "apiKey",
        "in": "header",
        "name": "X-TALVIN-ORGANIZATION-ID"
      },
      "talvinApiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-TALVIN-API-KEY"
      }
    }
  }
}